name: Merge Dev to Staging and Deploy via Docker

# Trigger this workflow when code is pushed to the dev branch
on:
  push:
    branches:
      - develop

jobs:
  merge-and-deploy:
    runs-on: self-hosted  # Use the latest Ubuntu runner
    #environment: staging

    steps:
      # Step 1: Checkout the full repository including all branches
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Required to access all branches for merging

      # Step 2: Set up Git user for committing the merge
      - name: Set up Git
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"

      # Step 3: Merge dev into staging and push the changes
      - name: Merge dev into staging
        run: |
          git checkout staging                      # Switch to staging branch
          git merge origin/develop --no-ff -m "Auto-merge dev into staging"  # Merge dev
          git push origin staging                   # Push updated staging branch

      # Step 4: SSH into the server and deploy using Docker
      - name: Deploy to self-hosted server via SSH
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.SSH_HOST }}             # Server IP or domain
          username: ${{ secrets.SSH_USER }}         # SSH username
          key: ${{ secrets.SSH_KEY }}               # SSH private key
          script: |
            cd /cephfs/staging/CBAS                    # Navigate to app directory
            git pull origin staging                 # Pull latest code from staging
            docker compose down                     # Stop running containers
            docker compose up -d --build            # Rebuild and start containers in detached mode
